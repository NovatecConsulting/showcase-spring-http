---
version: '2.4'
networks:
    default:
      name: ${DOMAIN_NAME}

services:
  ##########################################################
  # Apps                                                   #
  ##########################################################
  web-server:
    image: web-server:${APPS_VERSION}
    restart: always
    ports:
      - 8800:8080
      - 8801:8081
    environment:
      SERVER_PORT: 8080
      MANAGEMENT_SERVER_PORT: 8081
    labels:
      SERVICE_8080_NAME: "web-server"
      SERVICE_8080_TAGS: "app"
      SERVICE_8081_NAME: "web-server-mgmt"
      SERVICE_8081_TAGS: "app,prometheus"
      SERVICE_8081_METRICS_PATH: "/actuator/prometheus"
      SERVICE_8081_METRICS_SERVICE: "web-server"
      SERVICE_8081_METRICS_VERSION: "${APPS_VERSION}"

  web-delegate:
    image: web-delegate:${APPS_VERSION}
    restart: always
    ports:
      - 8900:8080
      - 8901:8081
    environment:
      SERVER_PORT: 8080
      MANAGEMENT_SERVER_PORT: 8081
      TARGET_SERVER_URL: http://web-server:8080
      #HTTP_CLIENT_USE_DEFAULT_REQUEST_FACTORY: "false"
      #HTTP_CLIENT_POOL_MAX_CONNECTIONS_TOTAL: 25
      #HTTP_CLIENT_POOL_DEFAULT_MAX_CONNECTIONS_PER_ROUTE: 25
      #SPRING_TASK_EXECUTION_POOL_MAX_SIZE: 25
      #SPRING_TASK_EXECUTION_POOL_QUEUE_CAPACITY: 100
    labels:
      SERVICE_8080_NAME: "web-delegate"
      SERVICE_8080_TAGS: "app"
      SERVICE_8081_NAME: "web-delegate-mgmt"
      SERVICE_8081_TAGS: "app,prometheus"
      SERVICE_8081_METRICS_PATH: "/actuator/prometheus"
      SERVICE_8081_METRICS_SERVICE: "web-delegate"
      SERVICE_8081_METRICS_VERSION: "${APPS_VERSION}"

  webflux-server:
    image: webflux-server:${APPS_VERSION}
    restart: always
    ports:
      - 8600:8080
      - 8601:8081
    environment:
      SERVER_PORT: 8080
      MANAGEMENT_SERVER_PORT: 8081
      #NETTY_HTTP_SERVER_PROTOCOLS: h2c
    labels:
      SERVICE_8080_NAME: "webflux-server"
      SERVICE_8080_TAGS: "app"
      SERVICE_8081_NAME: "webflux-server-mgmt"
      SERVICE_8081_TAGS: "app,prometheus"
      SERVICE_8081_METRICS_PATH: "/actuator/prometheus"
      SERVICE_8081_METRICS_SERVICE: "webflux-server"
      SERVICE_8081_METRICS_VERSION: "${APPS_VERSION}"

  webflux-delegate:
    image: webflux-delegate:${APPS_VERSION}
    restart: always
    ports:
      - 8700:8080
      - 8701:8081
    environment:
      SERVER_PORT: 8080
      MANAGEMENT_SERVER_PORT: 8081
      TARGET_SERVER_URL: http://webflux-server:8080
      #NETTY_HTTP_SERVER_PROTOCOLS: h2c
      #NETTY_HTTP_CLIENT_PROTOCOLS: h2c
    labels:
      SERVICE_8080_NAME: "webflux-delegate"
      SERVICE_8080_TAGS: "app"
      SERVICE_8081_NAME: "webflux-delegate-mgmt"
      SERVICE_8081_TAGS: "app,prometheus"
      SERVICE_8081_METRICS_PATH: "/actuator/prometheus"
      SERVICE_8081_METRICS_SERVICE: "webflux-delegate"
      SERVICE_8081_METRICS_VERSION: "${APPS_VERSION}"

  ##########################################################
  # Platform                                               #
  ##########################################################
  consul:
    image: consul:1.9
    restart: always
    ports:
      - 8500:8500
      - 8600:8600/udp
    environment:
      CONSUL_BIND_INTERFACE: 'eth0'
      CONSUL_LOCAL_CONFIG: '{ "ui": true,  "domain": "${CONSUL_DOMAIN_NAME}"}'
    labels:
      SERVICE_8300_NAME: "consul"
      SERVICE_8300_TAGS: "platform"
      SERVICE_8500_NAME: "consul-http"
      SERVICE_8500_TAGS: "platform"
      SERVICE_8600_NAME: "consul-dns"
      SERVICE_8600_TAGS: "platform"
      SERVICE_8301_IGNORE: "true"
      SERVICE_8302_IGNORE: "true"

  consul-registrator:
    image: gliderlabs/registrator:master
    restart: always
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    command: [ "-internal", "consul://consul:8500" ]

  prometheus:
    image: prom/prometheus:v2.26.0
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./platform/prometheus/config.yaml:/etc/prometheus/prometheus.yml
    labels:
      SERVICE_9090_NAME: "prometheus"
      SERVICE_9090_TAGS: "platform"

  grafana:
    image: grafana/grafana:7.5.5
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./platform/grafana/provisioning/:/etc/grafana/provisioning
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    labels:
      SERVICE_3000_NAME: "grafana"
      SERVICE_3000_TAGS: "platform"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.38.6
    restart: always
    ports:
      - 9400:8080
    privileged: true
    volumes:
     - /:/rootfs:ro
     - /var/run:/var/run:ro
     - /sys:/sys:ro
     - /var/lib/docker/:/var/lib/docker:ro
     - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    labels:
      SERVICE_8080_NAME: "cadvisor"
      SERVICE_8080_TAGS: "platform,prometheus"
      SERVICE_8080_METRICS_PATH: "/metrics"
    command: ["--store_container_labels=false", "--docker_only=true"]

  hawtio:
    image: hawtio:${APPS_VERSION}
    restart: always
    ports:
      - 8000:8000
    environment:
      SERVER_PORT: 8000
    labels:
      SERVICE_8000_NAME: "hawtio"
      SERVICE_8000_TAGS: "platform,prometheus"
      SERVICE_8000_METRICS_PATH: "/prometheus"